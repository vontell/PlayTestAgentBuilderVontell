{"nodes":[{"width":98,"height":36,"id":"1","type":"rootNode","position":{"x":216,"y":30.5},"deletable":false,"data":{"nodeTypeName":"Root Node","nodeTypeDescription":"This is the Root Node, from which the rest of the graph is built.","label":"Root Node"},"positionAbsolute":{"x":216,"y":30.5},"selected":false,"dragging":false},{"width":167,"height":52,"id":"2","type":"sequenceNode","position":{"x":180.5,"y":96.77371108549173},"deletable":false,"data":{"isConnectableTarget":false,"nodeTypeName":"Sequence Node","nodeTypeDescription":"This is the starting point for your bot's Behavior Tree logic.","label":"Top Level Sequence Node","prompt":"","code":""},"positionAbsolute":{"x":180.5,"y":96.77371108549173},"selected":false,"dragging":false},{"width":115,"height":52,"id":"7","type":"selectorNode","position":{"x":207.252529883568,"y":184.2070573022218},"data":{"subType":null,"displayName":"Selector Node","displayDescription":"Selector nodes execute children in order until one of them returns Success or all children return Failure. This is like an OR operator.","label":"Core Logic","prompt":"","code":""},"positionAbsolute":{"x":207.252529883568,"y":184.2070573022218},"selected":false,"dragging":false},{"width":136,"height":52,"id":"9","type":"actionNode","position":{"x":307.6229291138654,"y":302.1182237276561},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Collect nearby items","prompt":"Collect nearby items","code":"class LeafNode extends TreeNode {\n\tpublic override async execute(): Promise<NodeStatus> {\n\t\tconst bot = this.getData<RGBot>('bot');\n\t\tif (!bot) {\n\t\t\treturn NodeStatus.FAILURE;\n\t\t}\n\n\t\tconst items = await bot.findAndCollectItemsOnGround({maxDistance: 20});\n\t\tif (items.length > 0) {\n\t\t\treturn NodeStatus.SUCCESS;\n\t\t} else {\n\t\t\treturn NodeStatus.FAILURE;\n\t\t}\n\t}\n}"},"positionAbsolute":{"x":307.6229291138654,"y":302.1182237276561},"selected":false,"dragging":false},{"width":149,"height":52,"id":"10","type":"actionNode","position":{"x":460.77711817814304,"y":301.4557393070821},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Attack nearby enemies","prompt":"","code":""},"positionAbsolute":{"x":460.77711817814304,"y":301.4557393070821},"selected":false,"dragging":false},{"width":164,"height":52,"id":"11","type":"actionNode","position":{"x":-61.141986250865514,"y":297.6629133867113},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Return a flag if I have one","prompt":"Return a flag to my base if I have it in my inventory","code":"class LeafNode extends TreeNode {\n\tpublic override async execute(): Promise<NodeStatus> {\n\t\tconst bot = this.getData<RGBot>('bot');\n\t\tif (!bot) {\n\t\t\treturn NodeStatus.FAILURE;\n\t\t}\n\n\t\t// Check if the bot has a flag in its inventory\n\t\tif (!bot.inventoryContainsItem('flag')) {\n\t\t\treturn NodeStatus.FAILURE;\n\t\t}\n\n\t\t// Find the base block\n\t\tconst baseBlock = bot.findBlock('base', { partialMatch: true, maxDistance: 1000, originPoint: bot.position() });\n\t\tif (!baseBlock) {\n\t\t\treturn NodeStatus.FAILURE;\n\t\t}\n\n\t\t// Approach the base block\n\t\tconst approachResult = await bot.approachBlock(baseBlock, { reach: 1 });\n\t\tif (!approachResult) {\n\t\t\treturn NodeStatus.RUNNING;\n\t\t}\n\n\t\t// Drop the flag\n\t\tawait bot.dropInventoryItem('flag', { partialMatch: true, quantity: 1 });\n\n\t\treturn NodeStatus.SUCCESS;\n\t}\n}"},"positionAbsolute":{"x":-61.141986250865514,"y":297.6629133867113},"selected":false,"dragging":false},{"width":150,"height":52,"id":"12","type":"selectorNode","position":{"x":132.87811934260145,"y":299.0903197730104},"data":{"subType":null,"displayName":"Selector Node","displayDescription":"Selector nodes execute children in order until one of them returns Success or all children return Failure. This is like an OR operator.","label":"Offensive Flag Capture","prompt":"","code":""},"positionAbsolute":{"x":132.87811934260145,"y":299.0903197730104},"selected":true,"dragging":false},{"width":121,"height":52,"id":"13","type":"actionNode","position":{"x":79.43329024421345,"y":407.66738392394285},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Approach the flag","prompt":"Approach the flag","code":""},"positionAbsolute":{"x":79.43329024421345,"y":407.66738392394285},"selected":false,"dragging":false},{"width":129,"height":52,"id":"15","type":"sequenceNode","position":{"x":225.8155929402362,"y":407.7753840271451},"data":{"subType":null,"displayName":"Sequence Node","displayDescription":"Sequence nodes execute children in order until one child returns Failure or all children returns Success. This is like an AND operator.","label":"Attack and Capture","prompt":"","code":""},"positionAbsolute":{"x":225.8155929402362,"y":407.7753840271451},"selected":false,"dragging":false},{"width":229,"height":52,"id":"16","type":"actionNode","position":{"x":94.65264920393895,"y":506.954986356909},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Attack enemies that are near the flag","prompt":"Attack enemies that are near the flag","code":""},"positionAbsolute":{"x":94.65264920393895,"y":506.954986356909},"selected":false,"dragging":false},{"width":114,"height":52,"id":"17","type":"actionNode","position":{"x":334.22840375258323,"y":507.0113199860584},"data":{"subType":null,"displayName":"Action Node","displayDescription":"Action nodes represent complex actions (e.g., 'open the door').","label":"Capture the Flag","prompt":"Capture the flag","code":""},"positionAbsolute":{"x":334.22840375258323,"y":507.0113199860584},"selected":false,"dragging":false}],"edges":[{"animated":true,"id":"e1-2","source":"1","target":"2","deletable":false,"selected":false},{"animated":true,"id":"7","source":"2","target":"7"},{"animated":true,"id":"9","source":"7","target":"9"},{"animated":true,"id":"10","source":"7","target":"10"},{"animated":true,"id":"11","source":"7","target":"11"},{"animated":true,"id":"12","source":"7","target":"12"},{"animated":true,"id":"13","source":"12","target":"13"},{"animated":true,"id":"15","source":"12","target":"15"},{"animated":true,"id":"16","source":"15","target":"16"},{"animated":true,"id":"17","source":"15","target":"17"}],"viewport":{"x":70.29484393836651,"y":-53.432725052009005,"zoom":1.395136686622935}}